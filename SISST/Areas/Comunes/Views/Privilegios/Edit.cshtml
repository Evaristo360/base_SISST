@model SISST.ViewModels.Privilegios.VMPrivilegio
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Privilegios de usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string showIcono = Model.porOmision ? "display:block;" : "display:none;";
    string claseBotonGuardar = Context.Session.GetString("claseBotonGuardar");
    string claseBotonCancelar = Context.Session.GetString("claseBotonCancelar");
}


<div class="card card-default">
    <div class="card-header">
        <div class="row">
            <div class="col-8">
                <h3 class="pl-3">@ViewData["Title"]</h3>
                <ol class="breadcrumb mb-0 " style="background-color:white;">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Privilegios",  new { Area = "Comunes" })">Lista de privilegios</a>
                    </li>
                    <li class="breadcrumb-item ">
                        <a href="@Url.Action("Details", "Privilegios",  new { Area = "Comunes", id= Model.id })">Detalle privilegio</a>
                    </li>
                    <li class="breadcrumb-item active">
                        Editar privilegio
                    </li>
                </ol>
            </div>
            <div class="col-4 text-right mt-3">
                @Html.ActionLink("Consulta de privilegio", "Details", "Privilegios", new { Area = "Comunes", id = Model.id }, new { @class = "btn btn_sistema" })
            </div>
        </div>
    </div>
</div>
<div class="card card-default">
    <h4 class="card-header">
        Datos del privilegio
    </h4>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Privilegios", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.id)

            <div class="form-group row">
                @Html.LabelFor(model => model.nombrePrivilegio, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label  required-data" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.nombrePrivilegio, new { @class = "form-control", @maxlength = "100" })
                    <small style="color:cadetblue"> </small>
                    @Html.ValidationMessageFor(model => model.nombrePrivilegio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label  required-data" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.url, new { @class = "form-control", @maxlength = "100" })
                    <small style="color:cadetblue"> </small>
                    @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("", "Módulo", htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label required-data" })
                <div class="col-md-10">
                    @Html.DropDownList("modulo", (IEnumerable<SelectListItem>
                  )Model.lstOpciones, "Seleccione...", new { @class = "form-control chosen-select" })
                    @Html.ValidationMessageFor(model => model.modulo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.seccion, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.seccion, new { @class = "form-control", @maxlength = "100" })
                    <small style="color:cadetblue"> </small>
                    @Html.ValidationMessageFor(model => model.seccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label required-data" })
                <div class="col-md-10">
                    @Html.DropDownList("area", (IEnumerable<SelectListItem>
                  )Model.lstAreas, "Seleccione...", new { @class = "form-control chosen-select" })
                    @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.porOmision, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                <div class="col-md-10">
                    <label class="switch">
                        @Html.CheckBoxFor(model => model.porOmision)
                        <span class="slider round"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.porOmision, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="divIcono" style="@showIcono">
                <div class="form-group row">
                    @Html.LabelFor(model => model.moduloMenu, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.moduloMenu, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.moduloMenu, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.orden, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.orden, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.orden, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.icono, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.icono, new { @class = "form-control", @maxlength = "100" })
                        <small style="color:cadetblue">Ingrese el código de Font Awesome 5. Por ej. fa-address-book<br />Para referencia: http://themicon.co/templates/?item=angle</small><br />
                        @Html.ValidationMessageFor(model => model.icono, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="form-group row">
                @Html.LabelFor(model => model.activo, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                <div class="col-md-10">
                    <label class="switch">
                        @Html.CheckBoxFor(model => model.activo)
                        <span class="slider round"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
                </div>
            </div>*@
            @Html.HiddenFor(model => model.activo)
            <div class="form-group row">
                <label class="col-md-4 pl-5 col-form-label">(*) Dato requerido.</label>
            </div>
            <div class="form-group row">
                <div class="col-10 offset-2 ">
                    <button type="button" class="@claseBotonCancelar mr-1" onclick="location.href='@Url.Action("Details", "Privilegios", new { Area = "Comunes", id = Model.id })'"><i class="fa fa-times pr-2"></i>Cancelar</button>
                    <button type="submit" class="@claseBotonGuardar mr-1"><i class="fas fa-save pr-2"></i> Guardar</button>
                </div>
            </div>

        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
            $(document).ready(function () {
                if ('@TempData["tipoMensaje"]' != "") {
                    toastr.options.positionClass = 'toast-bottom-right';
                    toastr['@TempData["tipoMensaje"]']('@TempData["mensaje"]');
                }

                $("input[name$='porOmision']").click(function () {
                    var checked = $('#porOmision').is(":checked")
                    if (checked == true) {
                        $("#divIcono").show();
                    }
                    else {
                        $("#divIcono").hide();
                    }
                });
            });
    </script>
}




