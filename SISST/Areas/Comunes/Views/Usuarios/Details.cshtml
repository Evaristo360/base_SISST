@model SISST.ViewModels.Comunes.Usuarios.VMUsuario
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string claseBotonGuardar = Context.Session.GetString("claseBotonGuardar");
    string claseBotonCancelar = Context.Session.GetString("claseBotonCancelar");
}
@using SISST.ViewModels.Comunes.Usuarios
@using SISST.ViewModels.Privilegios

<div class="card card-default">
    <div class="card-header">
        <div class="row">
            <div class="col-8">
                <h3 class="pl-3">@ViewData["Title"]</h3>
                <ol class="breadcrumb mb-0 " style="background-color:white;">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Usuarios", new { Area = "Comunes" })">Lista de usuarios</a>
                    </li>
                    <li class="breadcrumb-item active">
                        Detalle usuario
                    </li>
                </ol>
            </div>
            <div class="col-4 text-right mt-3">
                @Html.ActionLink("Lista de usuarios", "Index", "Usuarios", null, new { @class = "btn btn_sistema" })
            </div>
        </div>
    </div>
</div>
<div class="card card-default">
    <h4 class="card-header">
        Datos del usuario
    </h4>
    <div class="card-body">

        <div role="tabpanel" class="ie-fix-flex">
            <ul class="nav nav-tabs nav-justified">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" href="#usuario" aria-controls="edit" role="tab" data-toggle="tab">
                        <span class="number">1.</span>
                        Datos de usuario
                    </a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" href="#roles" aria-controls="seo" role="tab" data-toggle="tab">
                        <span class="number">2.</span>
                        Roles
                    </a>
                </li>
                @{ 
                    var StylePrivilegios = "";
                    if (!Model.IsAdmin)
                    {
                        StylePrivilegios = "display:none;";
                    }
                    ViewBag.StylePrivilegios = StylePrivilegios;
                }
                    <li class="nav-item" role="presentation" style="@StylePrivilegios">
                        <a class="nav-link" href="#privilegios" aria-controls="picture" role="tab" data-toggle="tab">
                            <span class="number">3.</span>
                            Privilegios
                        </a>
                    </li>

                @*<li class="nav-item" role="presentation">
                        <a class="nav-link" href="#centros" aria-controls="picture" role="tab" data-toggle="tab">
                            <span class="number">4.</span>
                            Centros de trabajo
                        </a>
                    </li>*@
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="usuario" role="tabpanel">
                    <br />
                    <fieldset>
                        <legend>Datos del usuario</legend>

                        <div class="col-lg-12">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.RPE, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.RPE, new { @readonly = "readonly", @class = "form-control", @disabled = "true" })
                                    <br />
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Nombre, new { @readonly = "readonly", @class = "form-control", @disabled = "true" })
                                    <br />
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Apellidos, new { @readonly = "readonly", @class = "form-control", @disabled = "true" })
                                    <br />
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Email, new { @readonly = "readonly", @class = "form-control", @disabled = "true" })
                                    <br />
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.claveAreaNombre, new { @readonly = "readonly", @class = "form-control", @disabled = "true" })
                                    <br />
                                </div>
                            </div>
                            @*<div class="form-group row">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-2 pl-5 col-form-label " })
                                <div class="col-md-10">
                                    <label class="switch">
                                        <input type="checkbox" checked="@Model.IsActive" disabled>
                                        <span class="slider round"></span>
                                    </label>
                                </div>
                            </div>*@
                        </div>

                    </fieldset>


                    <br />
                </div>
                <div class="tab-pane" id="roles" role="tabpanel">
                    <br />
                    <fieldset>
                        <legend>Asignación de roles</legend>
                        @await Html.PartialAsync("_Roles", (List<VMAplicationRol>)Model.listaRoles, new ViewDataDictionary(ViewData) { { "accion", "detalle" } })
                    </fieldset>
                </div>
                

                    <div class="tab-pane" id="privilegios" role="tabpanel" style="@StylePrivilegios">
                        <br />
                        <fieldset style="@StylePrivilegios">
                            <legend>Asignación de privilegios</legend>
                            @await Html.PartialAsync("_Privilegios", (List<VMPrivilegio>)Model.listaPrivilegios, new ViewDataDictionary(ViewData) { { "accion", "detalle" } })
                        </fieldset>
                    </div>

                <!--<div class="tab-pane" id="centros" role="tabpanel">
    <br />
    <fieldset>
        <legend>Asignación de centrales</legend>-->
                @*@Html.Partial("_Centrales", (List<Central>)Model.listaCentral, new ViewDataDictionary() { { "accion", "create" } })*@
                <!--</fieldset>
    </div>-->
</div>
            <br />
            <div class="form-group">
                <div class=" col-md-10 offset-2">
                    @if (Model.IsActive == true)
                    {
                        <button type="button" class="@claseBotonCancelar deleteConfirmation deactivateConfirmation mr-1"><i class="fas fa-user-slash pr-2"></i>Desactivar</button>
                    }
                    else
                    {
                        <button type="button" class="@claseBotonCancelar deleteConfirmation activateConfirmation mr-1"><i class="fas fa-user pr-2"></i>Activar</button>
                    }
                    <button type="button" class="@claseBotonCancelar mr-1 resetPassword resetPasswordConfirmation mr-1" peticion="@Url.Action("ResetPassword", "Usuarios", new { Area = "Comunes", id = Model.Id })"> <i class="fa fa-edit pr-2"></i> Reiniciar Contraseña</button>
                    <button type="button" class="@claseBotonGuardar mr-1" onclick="location.href='@Url.Action("Edit", "Usuarios", new { Area = "Comunes", id = Model.Id })'"> <i class="fa fa-edit pr-2"></i> Editar</button>
                    @*<button type="button" class="@claseBotonCancelar deleteConfirmation mr-1"><i class="fas fa-trash-alt pr-2"></i>Eliminar</button>*@
                    <br /><br />
                </div>
            </div>
            <div id="divPrivilegioSeleccionado"></div>
            <div id="divRolSeleccionado"><input type="hidden" name="listaRol" id="listaRol" value="" /></div>
            <div id="divCentralSeleccionada"></div>
        </div>
    </div>
</div>


@using (Html.BeginForm("Delete", "Usuarios", FormMethod.Post, new { @id = "frmDelete" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
}

@using (Html.BeginForm("Deactivate", "Usuarios", FormMethod.Post, new { @id = "frmDeactivate" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("idActivate", Model.Id, new { @id = "idActivate" })
}

@using (Html.BeginForm("ResetPassword", "Usuarios", FormMethod.Post, new { @id = "frmResetPassword" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("usuarioId", Model.Id, new { @id = "usuarioId" })
}

@section BodyArea {
    @foreach (var rol in (List<VMAplicationRol>)Model.listaRoles)
    {
        string idModalM = "modalPrivilegio" + rol.Id;
        <div class="modal inmodal" id="@idModalM" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content animated fadeIn">
                    <div class="modal-header">
                        <h4 class="modal-title">Privilegios del rol @Html.Raw(rol.Name)</h4>
                    </div>
                    <div id="PrivilegioParcial" class="modal-body modalPrivilegios">
                        @await Html.PartialAsync("_Privilegios", (List<VMPrivilegio>)rol.rolPrivilegio, new ViewDataDictionary(ViewData) { { "accion2", "detalle" } })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn_sistema desbloquearFormulario" data-dismiss="modal">Aceptar</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
@section Styles {
    <link rel="stylesheet" href="~/css/datatable.css" />
}
@section Scripts {
    <script src="~/js/datatable.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        $(document).ready(function () {
            if ('@TempData["tipoMensaje"]' != "") {
                toastr.options.positionClass = 'toast-bottom-right';
            toastr['@TempData["tipoMensaje"]']('@TempData["mensaje"]');
            }
           });

    </script>
}

